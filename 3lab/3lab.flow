import material/material;


main () {
    println (fib(5));
    println (fibTail(6));
    println (fibArray(5));
    quit (0);
}

fib(n : int) -> [int] {
    if (n < 1) {
        [];
    } else if (n == 1) {
        [0];
    } else if (n == 2) {
        [0, 1];
    } else {
        array = fib(n - 1);
        concat(array, [array[n-2] + array[n-3]]);
    }
}


fibTailHelpFunc(n: int, a : [int], b : [int], res: [int]) -> [int] {
    if (n < 1) {
        [];
    } else if (n == 1) {
        [0];
    } else if (n == 2) {
        res;
    } else {
        fibTailHelpFunc(n-1, 
                        b,
                        ([fold(a, 0, \x,y -> x + y) + fold(b, 0, \x,y -> x + y)]),
                         concat(res, [fold(a, 0, \x,y -> x + y) + fold(b, 0, \x,y -> x + y)]));
    }
}

fibTail(n : int) -> [int] {
        fibTailHelpFunc(n, [0], [1], [0, 1]);
}


fibArrayHelpFunc(n: int, array: ref [int]) -> [int] {
    if (n < 1) {
        [];
    } else if (n == 1) {
        refArrayPush(array, 0);
        ^array;
    } else if (n == 2) {
        refArrayPush(array, 0);
        refArrayPush(array, 1);
        ^array;
    } else {
        fibArrayHelpFunc(n-1, array);
        refArrayPush(array, (^array)[n-2] + (^array)[n-3]);
        ^array;
    }
}

fibArray(n : int) -> [int] {
    fibArrayHelpFunc(n, ref []);
}